{"ast":null,"code":"var _jsxFileName = \"D:\\\\web project\\\\todoList\\\\client\\\\src\\\\components\\\\MyModal.js\";\nimport React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyModal = _ref => {\n  let {\n    title,\n    body,\n    Show,\n    handleClose\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: Show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyModal;\nexport default MyModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyModal\");","map":{"version":3,"names":["React","useState","Modal","Button","MyModal","title","body","Show","handleClose"],"sources":["D:/web project/todoList/client/src/components/MyModal.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst MyModal = ({title, body, Show, handleClose}) => {\r\n  return (\r\n    <Modal show={Show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose(false)}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default MyModal;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,OAAO,GAAG,QAAsC;EAAA,IAArC;IAACC,KAAD;IAAQC,IAAR;IAAcC,IAAd;IAAoBC;EAApB,CAAqC;EACpD,oBACE,QAAC,KAAD;IAAO,IAAI,EAAED,IAAb;IAAmB,MAAM,EAAEC,WAA3B;IAAA,wBACE,QAAC,KAAD,CAAO,MAAP;MAAc,WAAW,MAAzB;MAAA,uBACE,QAAC,KAAD,CAAO,KAAP;QAAA,UAAcH;MAAd;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,KAAD,CAAO,IAAP;MAAA,UAAaC;IAAb;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE,QAAC,KAAD,CAAO,MAAP;MAAA,uBACE,QAAC,MAAD;QAAQ,OAAO,EAAC,WAAhB;QAA4B,OAAO,EAAEE,WAAW,CAAC,KAAD,CAAhD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAdD;;KAAMJ,O;AAgBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}